#include <SoftwareSerial.h>

//Create software serial object to communicate with SIM800L
SoftwareSerial SIM800LSerial(11, 12); //SIM800L Tx & Rx is connected to Arduino #11 & #12

#include "Wire.h" // For I2C
#include "LCD.h" // For LCD
#include "LiquidCrystal_I2C.h" // Added library*
#include "Adafruit_Keypad.h"
#define KEYPAD_PID3844

#define R1    5
#define R2    4
#define R3    3
#define R4    2
#define C1    9
#define C2    8
#define C3    7
#define C4    6
// leave this import after the above configuration
#include "keypad_config.h"
Adafruit_Keypad customKeypad = Adafruit_Keypad( makeKeymap(keys), rowPins, colPins, ROWS, COLS);
LiquidCrystal_I2C lcd(0x27, 2, 1, 0, 4, 5, 6, 7); // 0x27 is the default I2C bus address of the backpack-see article

int max_attempts =3;
int attempts =0;
#define DoorClosePin A0
#define DoorOpenPin A1
#define DoorOpen4mESP A2
void setup() {
  Serial.begin(9600);
  customKeypad.begin();
  SIM800LSerial.begin(9600);
  pinMode(DoorClosePin, OUTPUT);
  pinMode(DoorOpenPin, OUTPUT);
  pinMode(DoorOpen4mESP, INPUT);
  digitalWrite(DoorClosePin, LOW);
  digitalWrite(DoorOpenPin, LOW);
  // Set off LCD module
  lcd.begin (20, 4); // 16 x 2 LCD module
  lcd.setBacklightPin(3, POSITIVE); // BL, BL_POL
  lcd.setBacklight(HIGH);

  lcd.setCursor(0, 0);
  lcd.print(" Welcome to Garage");
  lcd.setCursor(0, 1);
  lcd.print(" Monitoring System.");
  lcd.setCursor(0, 2);
  delay(5000);
  lcd.clear();
  lcd.setCursor(0,0);
  lcd.print("Enter Password:-");
 lcd.setCursor(0, 1);
 lcd.print("    ");
  //code is 1234
  //digitalWrite(DoorClosePin, LOW);
  //digitalWrite(DoorOpenPin, LOW);
}

char GetKey;
char KEY[4] = {'1', '2', '3', '4'};
char Check[4];
int c = 0;

void loop()
{

  if (c == 1)
  {
    lcd.setCursor(0, 3);
    lcd.print(GetKey);
    Check[0] = GetKey;
  }
  else if (c == 2)
  {
    lcd.setCursor(1, 3);
    lcd.print(GetKey);
    Check[1] = GetKey;
  }
  else if (c == 3)
  {
    lcd.setCursor(2, 3);
    lcd.print(GetKey);
    Check[2] = GetKey;
  }
  else if (c == 4)
  {
    lcd.setCursor(3, 3);
    lcd.print(GetKey);
    Check[3] = GetKey;

    c = 0;
    if (Check[0] == KEY[0] && Check[1] == KEY[1] && Check[2] == KEY[2] && Check[3] == KEY[3])
    {
      lcd.setCursor(0, 3);
      lcd.print("       ");
      lcd.setCursor(0, 3);
      lcd.print("Door Opening");
    //  lcd.setCursor(0, 1);
     // lcd.print("       ");
      
      digitalWrite(DoorOpenPin, HIGH);
      digitalWrite(DoorClosePin, LOW);
      SendSMS();
      delay(500);
     digitalWrite(DoorClosePin, LOW);
     digitalWrite(DoorOpenPin, LOW);
     delay(1500);
        lcd.clear();
        lcd.setCursor(0,0);
        lcd.print("Enter Password:-");
        lcd.setCursor(0, 1);
        lcd.print("    ");
    }
    else {
        
        attempts=attempts+1;
        if (attempts >= max_attempts)
        {
          lcd.clear();
          lcd.setCursor(0,2);
          lcd.print("Alert send");
          AlertSMS();
          delay(500);
          attempts=0;
          }
        lcd.setCursor(0, 2);
        lcd.print("Wrong Password");
        lcd.setCursor(0, 3);
        lcd.print("Max 3 attempts");
        delay(5000);
        lcd.clear();
        lcd.setCursor(0,0);
        lcd.print("Enter Password:-");
        lcd.setCursor(0, 1);
        lcd.print("    ");
    }
  }

  customKeypad.tick();
  while (customKeypad.available())
  {
    keypadEvent e = customKeypad.read();
    Serial.print((char)e.bit.KEY);
    if (e.bit.EVENT == KEY_JUST_PRESSED)
    {
      Serial.println(" pressed");
      GetKey = (char)e.bit.KEY;
      if (GetKey == 'D')
      {
        lcd.setCursor(0, 3);
        lcd.print("       ");
        lcd.setCursor(0, 3);
        lcd.print("Door Closing");
        digitalWrite(DoorClosePin, HIGH);
        digitalWrite(DoorOpenPin, LOW);
         delay(2000);
         lcd.setCursor(0, 3);
        lcd.print("              ");
      }
      else c++;
    }
    else if (e.bit.EVENT == KEY_JUST_RELEASED) Serial.println(" released");
  }
  digitalWrite(DoorClosePin, LOW);
digitalWrite(DoorOpenPin, LOW);

if(digitalRead(DoorOpen4mESP)==1)
{
        lcd.setCursor(0, 2);
      lcd.print("       ");
      lcd.setCursor(0, 3);
      lcd.print("Door Opening");
      digitalWrite(DoorClosePin, LOW);
      digitalWrite(DoorOpenPin, HIGH);
      SendSMS();
      delay(500);
     digitalWrite(DoorClosePin, LOW);
     digitalWrite(DoorOpenPin, LOW);
      delay(1500);
      lcd.setCursor(0, 3);
      lcd.print("           ");
}
  delay(10);
}

void SendSMS()
{
  SIM800LSerial.println("AT"); //Once the handshake test is successful, it will back to OK
  delay(100);

  SIM800LSerial.println("AT+CMGF=1"); // Configuring TEXT mode
  delay(100);
  SIM800LSerial.println("AT+CMGS=\"+16478629606\"");//change ZZ with country code and xxxxxxxxxxx with phone number to sms
  //SIM800LSerial.println("AT+CMGS=\"+16476144072\"");//change ZZ with country code and xxxxxxxxxxx with phone number to sms
  delay(100);
  SIM800LSerial.print("Door Access : Door is Opening"); //text content
  delay(100);
  SIM800LSerial.write(26);
}
void AlertSMS()
{
  SIM800LSerial.println("AT"); //Once the handshake test is successful, it will back to OK
  delay(100);

  SIM800LSerial.println("AT+CMGF=1"); // Configuring TEXT mode
  delay(100);
  SIM800LSerial.println("AT+CMGS=\"+16478629606\"");//change ZZ with country code and xxxxxxxxxxx with phone number to sms
  //SIM800LSerial.println("AT+CMGS=\"+16476144072\"");//change ZZ with country code and xxxxxxxxxxx with phone number to sms
  delay(100);
  SIM800LSerial.print("Door Access : Wrong Password Attempt"); //text content
  delay(100);
  SIM800LSerial.write(26);
}
