#include <Wire.h>
#include <LiquidCrystal_I2C.h>
#include <Keypad.h>
#include <SoftwareSerial.h>
SoftwareSerial mySerial(10, 11); // RX, TX

const byte ROWS = 4; //four rows
const byte COLS = 4; //three columns
char keys[ROWS][COLS] = {
  {'1','2','3','A'},
  {'4','5','6','B'},
  {'7','8','9','C'},
  {'*','0','#','D'}
};
//byte rowPins[ROWS] = {4,5,6,7}; //connect to the row pinouts of the keypad
//byte colPins[COLS] = {8,9,12,13}; //connect to the column pinouts of the keypad

byte rowPins[ROWS] = {8,9,12,13}; //connect to the row pinouts of the keypad
byte colPins[COLS] = {A0,A1,A2,A3}; //connect to the column pinouts of the keypad

Keypad keypad = Keypad( makeKeymap(keys), rowPins, colPins, ROWS, COLS );
LiquidCrystal_I2C lcd(0x27,16,2);  // set the LCD address to 0x27 for a 16 chars and 2 line display

String password = "2356"; // set password
String message = "Many Wrong Password Retries";
String number = "+16478075601"; // number set for GSM notifications
int sendsms; //Initializing an integer variabe sendsms
String input; //initializing a string variable

void setup()
{
  Serial.begin(9600); //Begin the host machine communication at baud rate 9600
  mySerial.begin(9600); //Begin the Arduino communication at Baud rate 9600

  Serial.println("STARTING");// Print starting on the serial monitor
  lcd.init();                      // initialize the lcd
  // Print a message to the LCD.
  lcd.backlight();
  lcd.clear(); // clear the LCD screen
  lcd.setCursor(0,0); // Set cursor at 0,0
  lcd.print("STARTING"); //Print STARTING on LCD

  Serial.println("Initializing GSM"); //Print Initializing GSM on serial monitor
  delay(5000); // Boot Up time for GSM

  Serial.println("STARTED\n\n"); //Print STARTED on the serial monitor
  Serial.println("\n\n\n"); // leave three lines
   
  lcd.clear(); // for clearing LCD
  lcd.setCursor(0,0);// set the LCD cursor to 0,0 and print ENTER PASSWORD
  lcd.print("ENTER PASSWORD"); //Print ENTER PASSWORD on LCD screen
  lcd.setCursor(0,1);// Set the LCD cursor to 0,1
  lcd.print(input);// Print the input from the user
}


void loop()
{
   char key = keypad.getKey(); //Get the input from the pressed key
 
  if (key)
  {
    Serial.println(key); // If it is a key, print on the LCD
    if(key != 'C' and key != 'D')//If the key is not C or D
    {
      input += key; // Store the pressed key as Input= Input+Key
    }
    else if(key == 'C')// If the pressed Key is C, Delete the last pressed key
    {
      input = input.substring(0,input.length()-1);
    }
    else if(key == 'D') //If the pressed key is D, Check whether it matches with the password
    {
      if(input == password) //Checking whether Input is same as set password
      {
        Serial.println("Right Password");// If yes print Right Password on serial monitor
        lcd.setCursor(0,1); // Set LCD cursor to 0,1
        lcd.print("CORRECT PASSWORD . ");// If yes print Correct password on LCD screen
        sendsms = 0; // For correct password sendsms=0
      }
      else
      {
        Serial.println("Wrong Password"); //If input is not equal to set password, Print wrong password on the serial monitor
        lcd.setCursor(0,1);//set LCD screen to 0,1
        lcd.print("WRONG PASSWORD X ");// Print WRONG PASSWORD on the LCD screen as well
        sendsms++;//In this case sendsms= sendsms+1
      }
      delay(2000);//Give delay
      input = "";
      if(sendsms >= 3)//if sendsms >=3 the GSM module will be activated
      {
        lcd.setCursor(0,1);//set the LCD cursor to 0,1
        lcd.print("X SENDING SMS X ");//print SENDING SMS on the LCD screen
        SMS();//Send SMS
        sendsms = 0; // once an sms is sent set the sendsms to 0
      }
     
    }

    Serial.print("Input: "); //print Input on the serial monitor
    Serial.println(input);// recieve that input and print it on the monitor

    lcd.setCursor(0,1);// setthe LCD cursor to 0,1
    lcd.print(input); //print the user input on the LCD screen
    lcd.print("                ");//then print space
  }

  delay(20);// give delay

}

int SMS() //function for sending sms
{
  Serial.print("Sending SMS to : "); //print it on serial monitor
  Serial.println(number); //print the number on serial monitor
 
  mySerial.println("AT+CMGF=1");    //Sets the GSM Module in Text Mode
  delay(200);
  //Serial.println ("Set SMS Number");
  mySerial.println("AT+CMGS=\"" + number + "\"\r"); //Mobile phone number to send message
  delay(200);
  String SMS = "Many Wrong Password Retries";
  mySerial.println(SMS);
  delay(100);
  mySerial.println((char)26);// ASCII code of CTRL+Z
  delay(200);
  return 0;
}